# Goal: Reconcile my and fast-import's grammars

command ::=
    | blob
    | commit
    | tag
    | reset
    | alias
    | ls
    | cat_blob
    | "get-mark" SP mark_ref EOL
    | "checkpoint" EOL
    | "done" EOL
    | "progress" SP NOT_LF_ONLY* LF? EOL
    | "feature" SP feature EOL
    | "option git" SP option_git EOL
    | "option" SP NOT_LF* EOL

blob ::=
    "blob" EOL
    mark?
    original_oid?
    data_large

commit ::=
    "commit" SP ref EOL
    mark?
    original_oid?
    ("author" SP person_ident EOL)?
    "committer" SP person_ident EOL
    ("encoding" SP NOT_LF* EOL)?
    data_small
    ("from" SP commitish EOL)?
    ("merge" SP commitish EOL)*
    (file_modify | file_delete | file_rename | file_copy | note_modify |
        file_deleteall | commit_ls | cat_blob)*
    LF?
# BUG: Empty branch is seemingly allowed.
ref ::= NOT_LF*
person_ident ::= (name " ")? "<" email "> " date
# Empty name and email are seemingly allowed.
name ::= [^<>\n\0]*
email ::= [^<>\n\0]*
objectish ::= branch | mark_ref
# An objectish restricted to commits
commitish ::= objectish
file_modify ::=
    | "M " mode " " objectish " " path EOL
    | "M " mode " inline " path EOL
      cat_blob*
      data_large
file_delete ::=
    "D " change_path EOL
file_rename ::=
    "R " change_path " " change_path_eol EOL
file_copy ::=
    "C " change_path " " change_path_eol EOL
note_modify ::=
    # TODO: <path> is incorrect here. Reposurgeon also has this same issue: https://gitlab.com/esr/reposurgeon/-/blob/b1739ef8b9ee6b38230d9d2fede343352dca2d6e/surgeon/inner.go#L2458
    | "N " objectish " " path EOL
    | "N inline " path EOL
      data_large
file_deleteall ::= "deleteall"
commit_ls ::=
    | ls
    | "ls " path_quoted EOL
mode ::= [0-7]+
# This path is a quoted string, when it parses without errors, and literal bytes
# otherwise.
# BUG: This is different from the path in `ls`.
change_path ::= string | [^\n\0 ]*
# BUG: Paths at the end of a line may contain space.
change_path_eol ::= string | [^\n\0]*

tag ::=
    "tag " tag_name EOL
    mark?
    "from " objectish EOL
    original_oid?
    # BUG: `tagger` is optional in fast-import.c, but required in the
    # fast-import docs.
    "tagger " person_ident EOL
    data_small
# BUG: Name can contain NUL, but its copy is NUL-terminated.
# BUG: Empty name is seemingly allowed.
tag_name ::= NOT_LF

reset ::=
    "reset " branch EOL
    ("from " commitish EOL)?
    # BUG: fast-import docs include LF?, but fast-import.c doesn't seem to.

alias ::=
    # TODO: This optional LF is at the start of the command in fast-import.c,
    # but at the end in the fast-import docs.
    "alias" LF? EOL
    mark
    "to " commitish EOL

ls ::=
    # This path is a quoted string when the first character is '"' and literal
    # bytes otherwise. This is different from the path in commit changes.
    "ls " treeish " " (path_quoted | path_unquoted) EOL
treeish ::= mark_ref | oid_hex
oid_hex ::= …
path_quoted ::= string
path_unquoted ::= [^\"\n] NOT_LF*
# An escaped NUL is seemingly not valid.
string ::= "\"" ([^"\\\0] | "\\" ([abfnrtv"\\] | [0-3][0-7][0-7]))* "\""

cat_blob ::=
    "cat-blob " blobish EOL
blobish ::= mark_ref | oid_hex

# The mark is 0 when this line is omitted.
mark ::= "mark " mark_ref EOL
mark_ref ::= ":" int
original_oid ::= "original-oid " NOT_LF_ONLY* EOL

# Supports files larger than the configured --max-pack-size, when using the the
# length-prefixed syntax.
data_large ::= data
# Does not support large files.
data_small ::= data
data ::= "data " (data_counted | data_delimited) COMMENTS
# Reads as many bytes as specified.
data_counted ::=
    int LF
    .{length}
    LF?
# Consumes lines until the delimiter string is found.
# BUG: The delimiter can be empty. The open delimiter may contain NUL, but the
# closing delimiter may not.
data_delimited ::=
    "<<" (?<delim> NOT_LF*) LF
    (NOT_LF* LF)*?
    \k<delim> LF
    LF?

option_git ::=
    | "max-pack-size=" file_size
    | "big-file-threshold=" file_size
    | "depth=" uint
    | "active-branches=" uint
    | "export-pack-edges=" filename
    | "quiet"
    | "stats"
    | "allow-unsafe-features"
filename ::= NOT_LF*

feature ::=
    | "date-format=" date_format
    | "import-marks=" path
    | "import-marks-if-exists=" path
    | "export-marks=" path
    | "alias"
    | "rewrite-submodules-to=" submodule_rewrite
    | "rewrite-submodules-from=" submodule_rewrite
    | "get-mark"
    | "cat-blob"
    | "relative-marks"
    | "no-relative-marks"
    | "done"
    | "force"
    | "notes"
    | "ls"
path ::= NOT_LF*
submodule_rewrite ::= submodule_name ":" marks_file
submodule_name ::= [^:\n\0]
marks_file ::= NOT_LF*

# Time zone must be in the range -1400 to 1400, inclusive.
date if --date-format=raw ::= date_raw
date if --date-format=raw-permissive ::= date_raw
date if --date-format=rfc2822 ::= … # See parse_date in date.c
date if --date-format=now ::= "now"
# BUG: Allows extraneous sign in time zone.
date_raw ::= int " " [+-] [0-9]+

date_format ::=
    | "raw"
    | "raw-permissive"
    | "rfc2822"
    | "now"

# BUG: Most uses of strto* have incomplete error handling, allowing unintended
# signs, parse errors, empty digits, and junk after the integer.
int ::= [+-]? [0-9]+
uint ::= "+"? [0-9]+
unit_factor ::= [kKmMgG]?
file_size ::= uint unit_factor

EOL ::= LF COMMENTS
COMMENTS ::= ("#" NOT_LF* (LF | EOF))*
SP ::= " "
LF ::= "\n"
NOT_LF ::= [^\n\0]
NOT_LF_ONLY ::= [^\n]
