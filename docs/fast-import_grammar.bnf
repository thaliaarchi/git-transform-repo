command ::=
    | blob
    | commit
    | tag
    | reset
    | ls
    | cat_blob
    | "get-mark " get_mark
    | "checkpoint" SEP
    | "done" SEP
    | alias
    | "progress " NOT_LF_ONLY* LF? SEP
    | "feature " feature SEP
    | "option git " option_git SEP
    | "option " NOT_LF* SEP

blob ::=
    "blob" SEP
    mark?
    original_oid?
    data_large

commit ::=
    "commit " branch SEP
    mark?
    original_oid?
    ("author " person_ident SEP)?
    "committer " person_ident SEP
    ("encoding " NOT_LF_NUL* SEP)?
    data_small
    ("from " commitish SEP)?
    ("merge " commitish SEP)*
    (file_modify | file_delete | file_rename | file_copy | note_modify |
        file_deleteall | commit_ls | cat_blob)*
    LF?
# BUG: Branch can contain NUL, but comparisons are NUL-terminated.
# BUG: Empty branch is seemingly allowed.
branch ::= NOT_LF_NUL*
person_ident ::= (name " ")? "<" email "> " date
# Empty name and email are seemingly allowed.
name ::= [^<>\n\0]*
email ::= [^<>\n\0]*
objectish ::= branch | mark_ref
# An objectish restricted to commits
commitish ::= objectish
file_modify ::=
    "M " mode " " (file_modify_external | file_modify_inline)
file_delete ::=
    "D " …
file_rename ::=
    "R " …
file_copy ::=
    "C " …
note_modify ::=
    "N " …
file_deleteall ::=
    "deleteall " …
mode ::= [0-7]+
file_modify_external ::=
    mark_ref " " …
file_modify_inline ::=
    "inline " …
commit_ls ::=
    | ls
    | "ls " path_quoted SEP

tag ::=
    "tag " tag_name SEP
    mark?
    "from " objectish SEP
    original_oid?
    # BUG: `tagger` is optional in fast-import.c, but required in the
    # fast-import docs.
    "tagger " person_ident SEP
    data_small
# BUG: Name can contain NUL, but its copy is NUL-terminated.
# BUG: Empty name is seemingly allowed.
tag_name ::= NOT_LF_NUL

reset ::=
    "reset " branch SEP
    ("from " commitish SEP)?
    # BUG: fast-import docs include LF?, but fast-import.c doesn't seem to.

ls ::=
    "ls " treeish " " (path_quoted | path_unquoted) SEP
treeish ::= mark_ref | oid_hex
oid_hex ::= …
path_quoted ::= string
path_unquoted ::= [^\"\n] NOT_LF_NUL*
# An escaped NUL is seemingly not valid.
string ::= "\"" ([^"\\\0] | "\\" ([abfnrtv"\\] | [0-3][0-7][0-7]))* "\""

cat_blob ::=
    "cat-blob " …

alias ::=
    # TODO: This optional LF is at the start of the command in fast-import.c,
    # but at the end in the fast-import docs.
    "alias" LF? SEP
    mark
    "to " commitish SEP

# The mark is 0 when this line is omitted.
mark ::= "mark " mark_ref SEP
mark_ref ::= ":" int
original_oid ::= "original-oid " NOT_LF_ONLY* SEP

# Supports files larger than the configured --max-pack-size, when using the the
# length-prefixed syntax.
data_large ::= data
# Does not support large files.
data_small ::= data
data ::= "data " (data_counted | data_delimited) COMMENTS
# Reads as many bytes as specified.
data_counted ::=
    int LF
    .{length}
    LF?
# Consumes lines until the delimiter string is found.
# BUG: The delimiter can be empty. The open delimiter may contain NUL, but the
# closing delimiter may not.
data_delimited ::=
    "<<" (?<delim> NOT_LF_NUL*) LF
    (NOT_LF* LF)*?
    \k<delim> LF
    LF?

option_git ::=
    | "max-pack-size=" file_size
    | "big-file-threshold=" file_size
    | "depth=" uint
    | "active-branches=" uint
    | "export-pack-edges=" filename
    | "quiet"
    | "stats"
    | "allow-unsafe-features"
filename ::= NOT_LF*

feature ::=
    | "date-format=" date_format
    | "import-marks=" path
    | "import-marks-if-exists=" path
    | "export-marks=" path
    | "alias"
    | "rewrite-submodules-to=" submodule_rewrite
    | "rewrite-submodules-from=" submodule_rewrite
    | "get-mark"
    | "cat-blob"
    | "relative-marks"
    | "no-relative-marks"
    | "done"
    | "force"
    | "notes"
    | "ls"
path ::= NOT_LF_NUL
submodule_rewrite ::= submodule_name ":" marks_file
submodule_name ::= [^:\n\0]
marks_file ::= NOT_LF_NUL

# Time zone must be in the range -1400 to 1400, inclusive.
date if --date-format=raw ::= date_raw
date if --date-format=raw-permissive ::= date_raw
date if --date-format=rfc2822 ::= … # See parse_date in date.c
date if --date-format=now ::= "now"
# BUG: Allows extraneous sign in time zone.
date_raw ::= int " " [+-] [0-9]+

date_format ::=
    | "raw"
    | "raw-permissive"
    | "rfc2822"
    | "now"

# BUG: Most uses of strto* have incomplete error handling, allowing unintended
# signs, parse errors, empty digits, and junk after the integer.
int ::= [+-]? [0-9]+
uint ::= "+"? [0-9]+
unit_factor ::= [kKmMgG]?
file_size ::= uint unit_factor

SEP ::= LF COMMENTS
COMMENTS ::= ("#" NOT_LF* (LF | EOF))*
LF ::= "\n"
NOT_LF ::= [^\n\0] # TODO review all uses
NOT_LF_ONLY ::= [^\n]
NOT_LF_NUL ::= [^\n\0]
